// Code generated by protoc-gen-go. DO NOT EDIT.
// source: arachne.proto

package arachne

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GameRequest_GameType int32

const (
	GameRequest_RANDOM GameRequest_GameType = 0
	GameRequest_REPLAY GameRequest_GameType = 1
)

var GameRequest_GameType_name = map[int32]string{
	0: "RANDOM",
	1: "REPLAY",
}
var GameRequest_GameType_value = map[string]int32{
	"RANDOM": 0,
	"REPLAY": 1,
}

func (x GameRequest_GameType) String() string {
	return proto.EnumName(GameRequest_GameType_name, int32(x))
}
func (GameRequest_GameType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_arachne_eadec9edf9e00118, []int{1, 0}
}

type PlayRequest struct {
	// Types that are valid to be assigned to TestOneof:
	//	*PlayRequest_GameRequest
	//	*PlayRequest_MoveRequest
	//	*PlayRequest_DealRequest
	TestOneof            isPlayRequest_TestOneof `protobuf_oneof:"test_oneof"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PlayRequest) Reset()         { *m = PlayRequest{} }
func (m *PlayRequest) String() string { return proto.CompactTextString(m) }
func (*PlayRequest) ProtoMessage()    {}
func (*PlayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_arachne_eadec9edf9e00118, []int{0}
}
func (m *PlayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayRequest.Unmarshal(m, b)
}
func (m *PlayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayRequest.Marshal(b, m, deterministic)
}
func (dst *PlayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayRequest.Merge(dst, src)
}
func (m *PlayRequest) XXX_Size() int {
	return xxx_messageInfo_PlayRequest.Size(m)
}
func (m *PlayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayRequest proto.InternalMessageInfo

type isPlayRequest_TestOneof interface {
	isPlayRequest_TestOneof()
}

type PlayRequest_GameRequest struct {
	GameRequest *GameRequest `protobuf:"bytes,1,opt,name=game_request,json=gameRequest,oneof"`
}
type PlayRequest_MoveRequest struct {
	MoveRequest *MoveRequest `protobuf:"bytes,2,opt,name=move_request,json=moveRequest,oneof"`
}
type PlayRequest_DealRequest struct {
	DealRequest *DealRequest `protobuf:"bytes,3,opt,name=deal_request,json=dealRequest,oneof"`
}

func (*PlayRequest_GameRequest) isPlayRequest_TestOneof() {}
func (*PlayRequest_MoveRequest) isPlayRequest_TestOneof() {}
func (*PlayRequest_DealRequest) isPlayRequest_TestOneof() {}

func (m *PlayRequest) GetTestOneof() isPlayRequest_TestOneof {
	if m != nil {
		return m.TestOneof
	}
	return nil
}

func (m *PlayRequest) GetGameRequest() *GameRequest {
	if x, ok := m.GetTestOneof().(*PlayRequest_GameRequest); ok {
		return x.GameRequest
	}
	return nil
}

func (m *PlayRequest) GetMoveRequest() *MoveRequest {
	if x, ok := m.GetTestOneof().(*PlayRequest_MoveRequest); ok {
		return x.MoveRequest
	}
	return nil
}

func (m *PlayRequest) GetDealRequest() *DealRequest {
	if x, ok := m.GetTestOneof().(*PlayRequest_DealRequest); ok {
		return x.DealRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PlayRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PlayRequest_OneofMarshaler, _PlayRequest_OneofUnmarshaler, _PlayRequest_OneofSizer, []interface{}{
		(*PlayRequest_GameRequest)(nil),
		(*PlayRequest_MoveRequest)(nil),
		(*PlayRequest_DealRequest)(nil),
	}
}

func _PlayRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PlayRequest)
	// test_oneof
	switch x := m.TestOneof.(type) {
	case *PlayRequest_GameRequest:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GameRequest); err != nil {
			return err
		}
	case *PlayRequest_MoveRequest:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MoveRequest); err != nil {
			return err
		}
	case *PlayRequest_DealRequest:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DealRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PlayRequest.TestOneof has unexpected type %T", x)
	}
	return nil
}

func _PlayRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PlayRequest)
	switch tag {
	case 1: // test_oneof.game_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameRequest)
		err := b.DecodeMessage(msg)
		m.TestOneof = &PlayRequest_GameRequest{msg}
		return true, err
	case 2: // test_oneof.move_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MoveRequest)
		err := b.DecodeMessage(msg)
		m.TestOneof = &PlayRequest_MoveRequest{msg}
		return true, err
	case 3: // test_oneof.deal_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DealRequest)
		err := b.DecodeMessage(msg)
		m.TestOneof = &PlayRequest_DealRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PlayRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PlayRequest)
	// test_oneof
	switch x := m.TestOneof.(type) {
	case *PlayRequest_GameRequest:
		s := proto.Size(x.GameRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PlayRequest_MoveRequest:
		s := proto.Size(x.MoveRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PlayRequest_DealRequest:
		s := proto.Size(x.DealRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GameRequest struct {
	Gametype GameRequest_GameType `protobuf:"varint,1,opt,name=gametype,enum=arachne.GameRequest_GameType" json:"gametype,omitempty"`
	// seed declares the game to be replayed when GameType is REPLAY
	Seed                 int64    `protobuf:"varint,2,opt,name=seed" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameRequest) Reset()         { *m = GameRequest{} }
func (m *GameRequest) String() string { return proto.CompactTextString(m) }
func (*GameRequest) ProtoMessage()    {}
func (*GameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_arachne_eadec9edf9e00118, []int{1}
}
func (m *GameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameRequest.Unmarshal(m, b)
}
func (m *GameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameRequest.Marshal(b, m, deterministic)
}
func (dst *GameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameRequest.Merge(dst, src)
}
func (m *GameRequest) XXX_Size() int {
	return xxx_messageInfo_GameRequest.Size(m)
}
func (m *GameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameRequest proto.InternalMessageInfo

func (m *GameRequest) GetGametype() GameRequest_GameType {
	if m != nil {
		return m.Gametype
	}
	return GameRequest_RANDOM
}

func (m *GameRequest) GetSeed() int64 {
	if m != nil {
		return m.Seed
	}
	return 0
}

type Game struct {
	Seed                 int64    `protobuf:"varint,1,opt,name=seed" json:"seed,omitempty"`
	CardsRemaining       int32    `protobuf:"varint,2,opt,name=cardsRemaining" json:"cardsRemaining,omitempty"`
	CaptureCount         int32    `protobuf:"varint,3,opt,name=captureCount" json:"captureCount,omitempty"`
	Stack                []*Stack `protobuf:"bytes,4,rep,name=stack" json:"stack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game) Reset()         { *m = Game{} }
func (m *Game) String() string { return proto.CompactTextString(m) }
func (*Game) ProtoMessage()    {}
func (*Game) Descriptor() ([]byte, []int) {
	return fileDescriptor_arachne_eadec9edf9e00118, []int{2}
}
func (m *Game) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game.Unmarshal(m, b)
}
func (m *Game) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game.Marshal(b, m, deterministic)
}
func (dst *Game) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game.Merge(dst, src)
}
func (m *Game) XXX_Size() int {
	return xxx_messageInfo_Game.Size(m)
}
func (m *Game) XXX_DiscardUnknown() {
	xxx_messageInfo_Game.DiscardUnknown(m)
}

var xxx_messageInfo_Game proto.InternalMessageInfo

func (m *Game) GetSeed() int64 {
	if m != nil {
		return m.Seed
	}
	return 0
}

func (m *Game) GetCardsRemaining() int32 {
	if m != nil {
		return m.CardsRemaining
	}
	return 0
}

func (m *Game) GetCaptureCount() int32 {
	if m != nil {
		return m.CaptureCount
	}
	return 0
}

func (m *Game) GetStack() []*Stack {
	if m != nil {
		return m.Stack
	}
	return nil
}

type Stack struct {
	HiddenCount          int32    `protobuf:"varint,1,opt,name=hiddenCount" json:"hiddenCount,omitempty"`
	Cards                []*Card  `protobuf:"bytes,2,rep,name=cards" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stack) Reset()         { *m = Stack{} }
func (m *Stack) String() string { return proto.CompactTextString(m) }
func (*Stack) ProtoMessage()    {}
func (*Stack) Descriptor() ([]byte, []int) {
	return fileDescriptor_arachne_eadec9edf9e00118, []int{3}
}
func (m *Stack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stack.Unmarshal(m, b)
}
func (m *Stack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stack.Marshal(b, m, deterministic)
}
func (dst *Stack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stack.Merge(dst, src)
}
func (m *Stack) XXX_Size() int {
	return xxx_messageInfo_Stack.Size(m)
}
func (m *Stack) XXX_DiscardUnknown() {
	xxx_messageInfo_Stack.DiscardUnknown(m)
}

var xxx_messageInfo_Stack proto.InternalMessageInfo

func (m *Stack) GetHiddenCount() int32 {
	if m != nil {
		return m.HiddenCount
	}
	return 0
}

func (m *Stack) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type Card struct {
	Suit                 int32    `protobuf:"varint,1,opt,name=suit" json:"suit,omitempty"`
	Rank                 int32    `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Card) Reset()         { *m = Card{} }
func (m *Card) String() string { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()    {}
func (*Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_arachne_eadec9edf9e00118, []int{4}
}
func (m *Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Card.Unmarshal(m, b)
}
func (m *Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Card.Marshal(b, m, deterministic)
}
func (dst *Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Card.Merge(dst, src)
}
func (m *Card) XXX_Size() int {
	return xxx_messageInfo_Card.Size(m)
}
func (m *Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Card proto.InternalMessageInfo

func (m *Card) GetSuit() int32 {
	if m != nil {
		return m.Suit
	}
	return 0
}

func (m *Card) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

type MoveRequest struct {
	FromCol              int32    `protobuf:"varint,1,opt,name=fromCol" json:"fromCol,omitempty"`
	FromRow              int32    `protobuf:"varint,2,opt,name=fromRow" json:"fromRow,omitempty"`
	ToCol                int32    `protobuf:"varint,3,opt,name=toCol" json:"toCol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveRequest) Reset()         { *m = MoveRequest{} }
func (m *MoveRequest) String() string { return proto.CompactTextString(m) }
func (*MoveRequest) ProtoMessage()    {}
func (*MoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_arachne_eadec9edf9e00118, []int{5}
}
func (m *MoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveRequest.Unmarshal(m, b)
}
func (m *MoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveRequest.Marshal(b, m, deterministic)
}
func (dst *MoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveRequest.Merge(dst, src)
}
func (m *MoveRequest) XXX_Size() int {
	return xxx_messageInfo_MoveRequest.Size(m)
}
func (m *MoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoveRequest proto.InternalMessageInfo

func (m *MoveRequest) GetFromCol() int32 {
	if m != nil {
		return m.FromCol
	}
	return 0
}

func (m *MoveRequest) GetFromRow() int32 {
	if m != nil {
		return m.FromRow
	}
	return 0
}

func (m *MoveRequest) GetToCol() int32 {
	if m != nil {
		return m.ToCol
	}
	return 0
}

type DealRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DealRequest) Reset()         { *m = DealRequest{} }
func (m *DealRequest) String() string { return proto.CompactTextString(m) }
func (*DealRequest) ProtoMessage()    {}
func (*DealRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_arachne_eadec9edf9e00118, []int{6}
}
func (m *DealRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DealRequest.Unmarshal(m, b)
}
func (m *DealRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DealRequest.Marshal(b, m, deterministic)
}
func (dst *DealRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DealRequest.Merge(dst, src)
}
func (m *DealRequest) XXX_Size() int {
	return xxx_messageInfo_DealRequest.Size(m)
}
func (m *DealRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DealRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DealRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PlayRequest)(nil), "arachne.PlayRequest")
	proto.RegisterType((*GameRequest)(nil), "arachne.GameRequest")
	proto.RegisterType((*Game)(nil), "arachne.Game")
	proto.RegisterType((*Stack)(nil), "arachne.Stack")
	proto.RegisterType((*Card)(nil), "arachne.Card")
	proto.RegisterType((*MoveRequest)(nil), "arachne.MoveRequest")
	proto.RegisterType((*DealRequest)(nil), "arachne.DealRequest")
	proto.RegisterEnum("arachne.GameRequest_GameType", GameRequest_GameType_name, GameRequest_GameType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArachneClient is the client API for Arachne service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArachneClient interface {
	// Play executes a stream of game commands,
	// streaming back the current state of the game
	Play(ctx context.Context, opts ...grpc.CallOption) (Arachne_PlayClient, error)
}

type arachneClient struct {
	cc *grpc.ClientConn
}

func NewArachneClient(cc *grpc.ClientConn) ArachneClient {
	return &arachneClient{cc}
}

func (c *arachneClient) Play(ctx context.Context, opts ...grpc.CallOption) (Arachne_PlayClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Arachne_serviceDesc.Streams[0], "/arachne.Arachne/Play", opts...)
	if err != nil {
		return nil, err
	}
	x := &arachnePlayClient{stream}
	return x, nil
}

type Arachne_PlayClient interface {
	Send(*PlayRequest) error
	Recv() (*Game, error)
	grpc.ClientStream
}

type arachnePlayClient struct {
	grpc.ClientStream
}

func (x *arachnePlayClient) Send(m *PlayRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *arachnePlayClient) Recv() (*Game, error) {
	m := new(Game)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ArachneServer is the server API for Arachne service.
type ArachneServer interface {
	// Play executes a stream of game commands,
	// streaming back the current state of the game
	Play(Arachne_PlayServer) error
}

func RegisterArachneServer(s *grpc.Server, srv ArachneServer) {
	s.RegisterService(&_Arachne_serviceDesc, srv)
}

func _Arachne_Play_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ArachneServer).Play(&arachnePlayServer{stream})
}

type Arachne_PlayServer interface {
	Send(*Game) error
	Recv() (*PlayRequest, error)
	grpc.ServerStream
}

type arachnePlayServer struct {
	grpc.ServerStream
}

func (x *arachnePlayServer) Send(m *Game) error {
	return x.ServerStream.SendMsg(m)
}

func (x *arachnePlayServer) Recv() (*PlayRequest, error) {
	m := new(PlayRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Arachne_serviceDesc = grpc.ServiceDesc{
	ServiceName: "arachne.Arachne",
	HandlerType: (*ArachneServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Play",
			Handler:       _Arachne_Play_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "arachne.proto",
}

func init() { proto.RegisterFile("arachne.proto", fileDescriptor_arachne_eadec9edf9e00118) }

var fileDescriptor_arachne_eadec9edf9e00118 = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xb3, 0x8d, 0xdd, 0x54, 0xb3, 0x49, 0x54, 0xad, 0x7a, 0x88, 0x90, 0x90, 0xa2, 0x05,
	0xa1, 0x9c, 0x22, 0x08, 0x27, 0x24, 0x2e, 0x21, 0x45, 0xe5, 0x40, 0x4b, 0xb5, 0x20, 0x21, 0x4e,
	0xd5, 0x62, 0x4f, 0x53, 0xab, 0xb6, 0xd7, 0xac, 0xd7, 0x41, 0xb9, 0xf1, 0x00, 0x3c, 0x1a, 0x0f,
	0x85, 0x76, 0xd7, 0xff, 0x12, 0xf5, 0x36, 0xdf, 0xcc, 0xfc, 0x3e, 0xcd, 0xac, 0xc7, 0x30, 0x91,
	0x5a, 0x46, 0x0f, 0x39, 0x2e, 0x0b, 0xad, 0x8c, 0x62, 0xa3, 0x5a, 0xf2, 0x7f, 0x04, 0xe8, 0x6d,
	0x2a, 0xf7, 0x02, 0x7f, 0x55, 0x58, 0x1a, 0xf6, 0x0e, 0xc6, 0x5b, 0x99, 0xe1, 0x9d, 0xf6, 0x7a,
	0x46, 0xe6, 0x64, 0x41, 0x57, 0x17, 0xcb, 0x06, 0xbf, 0x92, 0x19, 0xd6, 0xbd, 0x9f, 0x06, 0x82,
	0x6e, 0x3b, 0x69, 0xd1, 0x4c, 0xed, 0x3a, 0xf4, 0xe4, 0x08, 0xbd, 0x56, 0xbb, 0x3e, 0x9a, 0x75,
	0xd2, 0xa2, 0x31, 0xca, 0xb4, 0x45, 0x87, 0x47, 0xe8, 0x25, 0xca, 0xb4, 0x87, 0xc6, 0x9d, 0xfc,
	0x30, 0x06, 0x30, 0x58, 0x9a, 0x3b, 0x95, 0xa3, 0xba, 0xe7, 0x7f, 0x08, 0xd0, 0xab, 0x83, 0x99,
	0xce, 0xec, 0x88, 0x66, 0x5f, 0xa0, 0x5b, 0x65, 0xba, 0x7a, 0xfe, 0xd4, 0x2a, 0x2e, 0xfe, 0xb6,
	0x2f, 0x50, 0xb4, 0xed, 0x8c, 0x41, 0x50, 0x22, 0xc6, 0x6e, 0x8d, 0xa1, 0x70, 0x31, 0xe7, 0x70,
	0xd6, 0x74, 0x32, 0x80, 0x53, 0xb1, 0xbe, 0xb9, 0xfc, 0x72, 0x7d, 0x3e, 0x70, 0xf1, 0xc7, 0xdb,
	0xcf, 0xeb, 0x1f, 0xe7, 0x84, 0xff, 0x25, 0x10, 0xd8, 0xa6, 0xd6, 0x80, 0x74, 0x06, 0xec, 0x15,
	0x4c, 0x23, 0xa9, 0xe3, 0x52, 0x60, 0x26, 0x93, 0x3c, 0xc9, 0xb7, 0xce, 0x3e, 0x14, 0x47, 0x59,
	0xc6, 0x61, 0x1c, 0xc9, 0xc2, 0x54, 0x1a, 0x37, 0xaa, 0xca, 0xfd, 0x83, 0x84, 0xe2, 0x20, 0xc7,
	0x5e, 0x42, 0x58, 0x1a, 0x19, 0x3d, 0xce, 0x82, 0xf9, 0x70, 0x41, 0x57, 0xd3, 0x76, 0xb1, 0xaf,
	0x36, 0x2b, 0x7c, 0x91, 0xdf, 0x40, 0xe8, 0x34, 0x9b, 0x03, 0x7d, 0x48, 0xe2, 0x18, 0x73, 0xef,
	0x48, 0x9c, 0x63, 0x3f, 0xc5, 0x5e, 0x40, 0xe8, 0xc6, 0x98, 0x9d, 0x38, 0xc3, 0x49, 0x6b, 0xb8,
	0x91, 0x3a, 0x16, 0xbe, 0xc6, 0x97, 0x10, 0x58, 0xe9, 0xb6, 0xab, 0x92, 0xc6, 0xc7, 0xc5, 0x36,
	0xa7, 0x65, 0xfe, 0x58, 0xef, 0xe4, 0x62, 0xfe, 0x1d, 0x68, 0xef, 0xc3, 0xb3, 0x19, 0x8c, 0xee,
	0xb5, 0xca, 0x36, 0x2a, 0xad, 0xc9, 0x46, 0x36, 0x15, 0xa1, 0x7e, 0xd7, 0x7c, 0x23, 0xd9, 0x05,
	0x84, 0x46, 0x59, 0xc2, 0xbf, 0x82, 0x17, 0x7c, 0x02, 0xb4, 0x77, 0x16, 0xab, 0xf7, 0x30, 0x5a,
	0xfb, 0x71, 0xd9, 0x1b, 0x08, 0xec, 0x49, 0xb3, 0xee, 0x7e, 0x7a, 0x17, 0xfe, 0x6c, 0x72, 0x70,
	0x00, 0x7c, 0xb0, 0x20, 0xaf, 0xc9, 0xcf, 0x53, 0xf7, 0x5b, 0xbc, 0xfd, 0x1f, 0x00, 0x00, 0xff,
	0xff, 0x39, 0x50, 0x09, 0x85, 0x27, 0x03, 0x00, 0x00,
}
